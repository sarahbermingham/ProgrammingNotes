{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fmodern\fcharset0 CourierNewPS-BoldMT;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12660\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 \
\
format( ) method\
	- 
\f1\b0 Prepares string for printing.\
	
\f0\b - 
\f1\b0 Like a normal string but it has place holders for the data we want to specially format.\
\
	
\f0\b -
\f1\b0  Example:\
				>> x = hello\
				>> print("\{\}").format(x)\
				hello\
\

\f0\b Format commands\
	- 
\f1\b0 \{:[align][min_width][.precision][type]\}\
	
\f0\b - 
\f1\b0 align: controls if value is printed centred, left/right justified.\
			- centre: ^\
			- left:	<\
			- right	>\
\
	
\f0\b - 
\f1\b0 type: specifies the type of value we want to insert. Common types are s (for string), d (for integer) and f (for float).\
\
	
\f0\b -
\f1\b0  min_width: specifies the overall minimum width for the value once printed.\
\
	
\f0\b -
\f1\b0  Example:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 				>> print("\{:.4f\}").format(math.pi)\
				3.1415\
	- \{:.4f\} means insert a float number (type=f) and display to four decimal places (precision=4)\
\
	- Example:\
			- We want nice alignment for the out put of this loop.\
\
			>> for i in range(8,10):\
			..		print(i, "* 2 = ", i*2)\
\
			8 * 2 = 16\
			9 * 2 = 18\
			10 * 2 = 20\
\
			- We can change it so all the numbers are right justified.\
\
			>> for i in range(8,10):\
			..		print("\{:2d\} * \{:1d\} = \{:3d\}".format(i, 2, i*2)\
		\
			 8 * 2 = 16\
			 9 * 2 = 18\
			10 * 2 = 20\
 }